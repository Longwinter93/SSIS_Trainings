<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/26/2022 8:43:12 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LUCAS"
  DTS:CreatorName="Lucas\Lukasz"
  DTS:DTSID="{EDB90E0D-E85C-4C61-9808-76F742EF6033}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{811540A4-BF1E-4295-AB3F-7571D3952E25}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Dodgy Data]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A95E5401-7BFD-4A05-A3BE-485742967E26}"
      DTS:ObjectName="Dodgy Data">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\IT programming tutorials\SSIS\WiseOwlTutorial\Contestants.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ContestantName"
              DTS:DTSID="{C918274A-13DE-42C9-8D4D-3D9900CB868E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="19"
              DTS:TextQualified="True"
              DTS:ObjectName="SeriesNumber"
              DTS:DTSID="{E2EBB9C8-A6EF-4EB9-91F8-1FF71D353DFD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="19"
              DTS:TextQualified="True"
              DTS:ObjectName="Position"
              DTS:DTSID="{559E7F5B-72E2-44E4-877A-F2E6DAC4AB6D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="MentorName"
              DTS:DTSID="{D5833A81-EDFF-4C63-AD11-2085342D9B2D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{21DA7C41-CD43-4DB5-B4BF-85A4A7A025E0}"
      DTS:ObjectName="Lucas\SQLEXPRESS.SSISTraining">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=Lucas\SQLEXPRESS;Initial Catalog=SSISTraining;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LUCAS\SQLEXPRESS.SSISTraining]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5C210A90-D495-4EC9-9693-E7A0F1DA063F}"
      DTS:ObjectName="LUCAS\SQLEXPRESS.SSISTraining">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LUCAS\SQLEXPRESS;Initial Catalog=SSISTraining;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LUCAS\SQLEXPRESS.SSISTraining 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6670BCBD-4375-472F-9486-39BCF8869E91}"
      DTS:ObjectName="LUCAS\SQLEXPRESS.SSISTraining 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LUCAS\SQLEXPRESS;Initial Catalog=SSISTraining;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete Old Data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{16804217-1222-41EC-8F79-ADE520D05A2F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete Old Data"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; Â© 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{21DA7C41-CD43-4DB5-B4BF-85A4A7A025E0}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[tblGoodContestant]&#xA;TRUNCATE TABLE [dbo].[tblBadContestant]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import dodgy data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F15C7936-2497-4E82-9942-AFC1CFAEA2A5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import dodgy data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import dodgy data\Bad data Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Bad data Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tblBadContestant]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import dodgy data\Bad data Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LUCAS\SQLEXPRESS.SSISTraining 1]"
                  connectionManagerRefId="Package.ConnectionManagers[LUCAS\SQLEXPRESS.SSISTraining 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].Columns[ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ContestantName"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].Columns[Problem]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Problem"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[Problem]"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[Problem]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].Columns[intSeries]"
                      cachedDataType="ui4"
                      cachedName="intSeries"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intSeries]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].Columns[intPosition]"
                      cachedDataType="ui4"
                      cachedName="intPosition"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intPosition]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="ContestantName" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      dataType="i4"
                      name="SeriesNumber" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      dataType="i4"
                      name="Position" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Mentor" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input].ExternalColumns[Problem]"
                      codePage="1252"
                      dataType="text"
                      name="Problem" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Bad data Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Bad data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Bad data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Bad data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Bad data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input].Columns[IfGood]"
                      cachedDataType="bool"
                      cachedName="IfGood"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[IfGood]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Conditional Split.Outputs[Good data]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Good data"
                  synchronousInputId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[IfGood]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IfGood ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import dodgy data\Conditional Split.Outputs[Bad Data]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Bad Data"
                  synchronousInputId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import dodgy data\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Data Conversion.Inputs[Data Conversion Input].Columns[ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ContestantName"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Data Conversion.Inputs[Data Conversion Input].Columns[MentorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MentorName"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import dodgy data\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ContestantName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ContestantName]"
                      name="Copy of ContestantName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MentorName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MentorName]"
                      name="Copy of MentorName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import dodgy data\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Dodgy data import"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="2057"
              name="Dodgy data import"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import dodgy data\Dodgy data import.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Dodgy Data]"
                  connectionManagerRefId="Package.ConnectionManagers[Dodgy Data]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[ContestantName]"
                      length="50"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]"
                      name="ContestantName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[SeriesNumber]"
                      dataType="ui4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[SeriesNumber]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[SeriesNumber]"
                      name="SeriesNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[Position]"
                      dataType="ui4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[Position]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[Position]"
                      name="Position"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[MentorName]"
                      length="50"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]"
                      name="MentorName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ContestantName" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[SeriesNumber]"
                      dataType="ui4"
                      name="SeriesNumber" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[Position]"
                      dataType="ui4"
                      name="Position" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[MentorName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MentorName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Good data Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Good data Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tblGoodContestant]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import dodgy data\Good data Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LUCAS\SQLEXPRESS.SSISTraining]"
                  connectionManagerRefId="Package.ConnectionManagers[LUCAS\SQLEXPRESS.SSISTraining]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].Columns[intSeries]"
                      cachedDataType="ui4"
                      cachedName="intSeries"
                      externalMetadataColumnId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intSeries]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].Columns[intPosition]"
                      cachedDataType="ui4"
                      cachedName="intPosition"
                      externalMetadataColumnId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intPosition]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].Columns[Copy of ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of ContestantName"
                      externalMetadataColumnId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      lineageId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ContestantName]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].Columns[Copy of MentorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of MentorName"
                      externalMetadataColumnId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      lineageId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MentorName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="ContestantName" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      dataType="i4"
                      name="SeriesNumber" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      dataType="i4"
                      name="Position" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Mentor" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Good data Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Good data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Good data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Good data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Good data Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Validate Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Validate Data"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fababae48ef941a3a9ebb2b459c55dbb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fababae48ef941a3a9ebb2b459c55dbb")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

   

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // if any of the fields are null, say so and exit

        if (Row.ContestantName_IsNull ||

        Row.Position_IsNull || Row.SeriesNumber_IsNull ||

        Row.Mentor_IsNull)

        {

            Row.Problem = "At least one column is not filled in";

            Row.IfGood = false;

            return;

        }
        // try to convert series/position numbers to integers

        int s = 0;

        int p = 0;

        try

        {

            s = Convert.ToInt32(Row.SeriesNumber);

        }

        catch

        {

            s = 0;

        }

        try

        {

            p = Convert.ToInt32(Row.Position);

        }

        catch

        {

            p = 0;

        }
        // if either still 0, we couldn't convert

        if (s == 0 || p == 0)

        {

            Row.Problem = "The series and position numbers aren't both integers";

            Row.IfGood = false;

            return;

        }

        // store the correct numbers for position and series

        Row.intSeries = (uint)s;

        Row.intPosition = (uint)p;

        // trim the mentor and contestant fields

        Row.MentorName = Row.MentorName.Trim();

        Row.ContestantName = Row.ContestantName.Trim();

        // record fact all worked OK

        Row.Problem = "";

        Row.IfGood = true;




    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ContestantName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool ContestantName_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt32 SeriesNumber
    {
        get
        {
            return Buffer.GetUInt32(BufferColumnIndexes[1]);
        }
    }
    public bool SeriesNumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public UInt32 Position
    {
        get
        {
            return Buffer.GetUInt32(BufferColumnIndexes[2]);
        }
    }
    public bool Position_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String MentorName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool MentorName_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IfGood
    {
        set
        {
            this[4] = value;
        }
    }
    public bool IfGood_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Problem
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Problem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt32 intPosition
    {
        set
        {
            this[6] = value;
        }
    }
    public bool intPosition_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt32 intSeries
    {
        set
        {
            this[7] = value;
        }
    }
    public bool intSeries_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public bool Mentor_IsNull { get; internal set; }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fababae48ef941a3a9ebb2b459c55dbb.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{48ba16c9-7d24-4e37-bc42-e59ae006fd09}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fababae48ef941a3a9ebb2b459c55dbb</RootNamespace>
    <AssemblyName>SC_fababae48ef941a3a9ebb2b459c55dbb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_fababae48ef941a3a9ebb2b459c55dbb" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_fababae48ef941a3a9ebb2b459c55dbb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_fababae48ef941a3a9ebb2b459c55dbb</msb:DisplayName>
    <msb:ProjectId>{FBC46414-7FD0-4596-A2AD-CF4DA3A3062D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_fababae48ef941a3a9ebb2b459c55dbb.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fababae48ef941a3a9ebb2b459c55dbb.Properties.Settings.get_Default():SC_fababae48ef941a3a9ebb2b459c55dbb.Properties.Sett" +
    "ings")]

namespace SC_fababae48ef941a3a9ebb2b459c55dbb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fababae48ef941a3a9ebb2b459c55dbb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fababae48ef941a3a9ebb2b459c55dbb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fababae48ef941a3a9ebb2b459c55dbb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fababae48ef941a3a9ebb2b459c55dbb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fababae48ef941a3a9ebb2b459c55dbb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fababae48ef941a3a9ebb2b459c55dbb.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKGCpGIAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA4jcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA3AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
NwAAAAAAAEgAAAACAAUAjCMAAEwTAAABAAAAAAAAANg2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgC6AAAAAQAAEQNvBgAABi0YA28LAAAGLRADbwkAAAYt
CANvGAAABiwTA3IBAABwbxIAAAYDFm8QAAAGKhYKFgsDbwgAAAYoEAAACgreBSYWCt4AAANvCgAA
BigQAAAKC94FJhYL3gAGLAMHLRMDcksAAHBvEgAABgMWbxAAAAYqAwZvFgAABgMHbxQAAAYDA28M
AAAGbxEAAApvDQAABgMDbwQAAAZvEQAACm8FAAAGA3K1AABwbxIAAAYDF28QAAAGKgAAARwAAAAA
NwAORQAFDgAAAQAASwAOWQAFDgAAAR4CKBwAAAYqKgIDBAUoEgAACipSAnsTAAAKAnsUAAAKFpRv
FQAACiomAhYDKBYAAAoqIgIWKBcAAAoqWgMsCAIWKBgAAAoqcrcAAHBzGQAACnpSAnsTAAAKAnsU
AAAKF5RvGgAACioiAhcoFwAACipSAnsTAAAKAnsUAAAKGJRvGgAACioiAhgoFwAACipSAnsTAAAK
AnsUAAAKGZRvFQAACiomAhkDKBYAAAoqIgIZKBcAAAoqWgMsCAIZKBgAAAoqcrcAAHBzGQAACno6
AhoDjB0AAAEoFgAACipaAywIAhooGAAACipytwAAcHMZAAAKeiYCGwMoFgAACipaAywIAhsoGAAA
CipytwAAcHMZAAAKejoCHAOMHgAAASgWAAAKKloDLAgCHCgYAAAKKnK3AABwcxkAAAp6OgIdA4we
AAABKBYAAAoqWgMsCAIdKBgAAAoqcrcAAHBzGQAACnoeAnsBAAAEKiICA30BAAAEKh4CKBsAAAoq
HgIoHAAACip+AigdAAAKAgJzIAAABn0CAAAEAgJzIQAABn0DAAAEKpIEclQBAHAabx4AAAosFQIF
AgMoHwAACg4EcwMAAAZvHgAABipKKwcCA28fAAAGA28aAAAGLfEqBio6AiggAAAKAgN9BAAABCo6
AiggAAAKAgN9BQAABCoeAiggAAAKKq5+BgAABC0ecmQBAHDQBwAAAighAAAKbyIAAApzIwAACoAG
AAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCQAAAoqLnMnAAAGgAgAAAQqAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHgHAAAjfgAA5AcAALwHAAAjU3RyaW5ncwAA
AACgDwAA2AEAACNVUwB4EQAAEAAAACNHVUlEAAAAiBEAAMQBAAAjQmxvYgAAAAAAAAACAAABVxWi
AQkBAAAA+gEzABYAAAEAAAAiAAAACAAAAAgAAAAoAAAAGgAAACQAAAATAAAAAQAAAAMAAAAUAAAA
GgAAAAEAAAAEAAAAAQAAAAAAVgMBAAAAAAAGAGQC3QUGAPgC3QUGALABygUPAFEGAAAGAN0B8QQG
AEcC8QQGACgC8QQGAN8C8QQGAIQC8QQGAJ0C8QQGAPQB8QQGAA8CHAMKALgC/QAGAOgGnAQKAJwF
/QAGAHgB3QUOAI0F/QAKAFcF/QAKACUH/QAGAJMBygUGAK0F/QUGAEsF3AQSAGMBQAMSAMQBQAMS
AEsBxwQGAFIHnAQGADkDnAQGACAFnAQGALQEnAQGAAQAnAQGADoFnAQGAB4BnAQGAIsAnAQGALIH
8QQAAAAAEwAAAAAAAQABAAEAEAC8BAAAEAABAAEAAQAQAIAFAAA9AAEAAwABABAABwcAAE0AAgAc
AAEAEADcBgAAOQAEACAAAQAQAJ0GAAA5AAUAIQAAABAABAZuBjkABgAiAAABEADMBm4GZQAIACYA
AQBRAIoABgDcBo0ABgCdBpEAAQAVB5UAAQAVB5UAEQCoBJkAEQA7AZ0AEQB7AKEAUCAAAAAAxgCP
B6UAAQA0IQAAAACGGL0FBgACADwhAAAAAIYYvQUpAAIARyEAAAAAhgjNACUABQBcIQAAAACGCOAA
EAAFAGYhAAAAAIYIvANQAAYAbyEAAAAAhgjWA6sABgCGIQAAAACGCG8FsAAHAJshAAAAAIYILgRQ
AAcApCEAAAAAhggDBbAABwC5IQAAAACGCAMEUAAHAMIhAAAAAIYIrwAlAAcA1yEAAAAAhgi+ABAA
BwDhIQAAAACGCJADUAAIAOohAAAAAIYIpgOrAAgAASIAAAAAhghwAKsACQAQIgAAAACGCH4DqwAK
ACciAAAAAIYIhwQQAAsAMSIAAAAAhgjwA6sADABIIgAAAACGCBAFtAANAFciAAAAAIYIFwSrAA4A
biIAAAAAhghgBrQADwB9IgAAAACGCGoEqwAQAJQiAAAAAIYIRgRQABEAnCIAAAAAgwhYBKsAEQCl
IgAAAACGAKYHUAASAK0iAAAAAIYA7wZQABIAtSIAAAAAhhi9BQYAEgDVIgAAAADGAIIHuQASAPoi
AAAAAMYBewelABYADSMAAAAAxgGPB6UAFwAPIwAAAACGGL0FwwAYAB4jAAAAAIYYvQXDABkALSMA
AAAAgxi9BQYAGgA1IwAAAACTCKkFyQAaAGEjAAAAAJMIIwHOABoAaCMAAAAAkwgvAdMAGgBwIwAA
AACWCPsG2QAbAHcjAAAAAIYYvQUGABsAfyMAAAAAkRjDBd4AGwAAAAEAqgcAAAEAogUAAAIApwYA
AAMAZQUAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEA
FgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEAFgMAAAEAHAAAAAIA8wAAAAMAogUAAAQAZQUAAAEAogUA
AAEAqgcAAAEAKwcAAAEAKwcAAAEAFgMJAL0FAQARAL0FBgAZAL0FCgApAL0FEAAxAL0FEAA5AL0F
EABBAL0FEABJAL0FEABRAL0FEABZAL0FEABhAL0FEABpAL0FBgCBAL0FBgChAL0FBgDBAL0FFQDR
AAsAIADZAKMEJQB5AL0FKQB5AKIFMwB5AKcGNwCJADYDOwB5AJMEQAB5AHgERgB5AH8EAQDhAL0F
EACJAAEASwB5AKYHUAB5AO8GUACZAL0FBgDZANUGVACZALsGWwBxAL0FBgABAZ0AYQABAa4HagCp
AL0FcADJAL0FBgAhAGsAvgEuAAsA/QAuABMABgEuABsAJQEuACMALgEuACsAVwEuADMAVwEuADsA
VwEuAEMALgEuAEsAXQEuAFMAVwEuAFsAdAFDAGMAvgHjAHMAvgEBAWsAvgFJAnsAJQFpAnsAJQEA
A2sAvgEgA2sAvgEbAAMAAQAHABIACAAUAAAA5ADiAAAA2gPmAAAAcwXqAAAAMgTmAAAAFwXqAAAA
HgTmAAAAwgDiAAAAqgPmAAAAdADmAAAAggPmAAAAiwTiAAAA9APmAAAAFAXqAAAAGwTmAAAAZAbq
AAAAbgTmAAAAXATmAAAArQXuAAAAQwHzAAAA/wb4AAIABAADAAEABQADAAIABgAFAAEABwAFAAIA
CAAHAAIACQAJAAIACgALAAIACwANAAIADAAPAAEADQAPAAIADgARAAEADwARAAEAEAATAAEAEQAV
AAEAEgAXAAEAEwAZAAEAFAAbAAEAFQAdAAEAFgAfAAEAFwAhAAIAGAAjAAEAGQAjAAIAIwAlAAIA
JAAnAAEAJQAnAAIAJgApAASAAAABAAAAAAAAAAAAAAAAACQAAAAEAAAAAAAAAAAAAAB4AEgAAAAA
AA4AAAAAAAAAAAAAAIEANQcAAAAADgAAAAAAAAAAAAAAgQBaBwAAAAAEAAAAAAAAAAAAAAB4AJwE
AAAAAAAAAAABAAAADgYAAAAAAAAAR2V0VUludDMyAFRvSW50MzIAPE1vZHVsZT4ASW5wdXRJRABT
Q19mYWJhYmFlNDhlZjk0MWEzYTllYmIyYjQ1OWM1NWRiYgBtc2NvcmxpYgA8TWVudG9yX0lzTnVs
bD5rX19CYWNraW5nRmllbGQAc2V0X0lmR29vZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X01lbnRvck5hbWUAc2V0X01lbnRvck5hbWUAZ2V0
X0NvbnRlc3RhbnROYW1lAHNldF9Db250ZXN0YW50TmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNDX2ZhYmFiYWU0OGVmOTQxYTNhOWViYjJiNDU5YzU1ZGJiLmRs
bABzZXRfSWZHb29kX0lzTnVsbABnZXRfTWVudG9yTmFtZV9Jc051bGwAc2V0X01lbnRvck5hbWVf
SXNOdWxsAGdldF9Db250ZXN0YW50TmFtZV9Jc051bGwAc2V0X0NvbnRlc3RhbnROYW1lX0lzTnVs
bABzZXRfUHJvYmxlbV9Jc051bGwAZ2V0X1Bvc2l0aW9uX0lzTnVsbABzZXRfaW50UG9zaXRpb25f
SXNOdWxsAGdldF9TZXJpZXNOdW1iZXJfSXNOdWxsAGdldF9NZW50b3JfSXNOdWxsAHNldF9NZW50
b3JfSXNOdWxsAHNldF9pbnRTZXJpZXNfSXNOdWxsAFNldE51bGwAc2V0X1Byb2JsZW0Ac2V0X0l0
ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9Qb3Np
dGlvbgBzZXRfaW50UG9zaXRpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21w
YXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAGdldF9TZXJpZXNOdW1i
ZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2ZhYmFiYWU0OGVmOTQxYTNhOWViYjJi
NDU5YzU1ZGJiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBz
ZXRfaW50U2VyaWVzAFNDX2ZhYmFiYWU0OGVmOTQxYTNhOWViYjJiNDU5YzU1ZGJiLlByb3BlcnRp
ZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5n
cwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5w
dXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2Vt
Ymx5AAAASUEAdAAgAGwAZQBhAHMAdAAgAG8AbgBlACAAYwBvAGwAdQBtAG4AIABpAHMAIABuAG8A
dAAgAGYAaQBsAGwAZQBkACAAaQBuAABpVABoAGUAIABzAGUAcgBpAGUAcwAgAGEAbgBkACAAcABv
AHMAaQB0AGkAbwBuACAAbgB1AG0AYgBlAHIAcwAgAGEAcgBlAG4AJwB0ACAAYgBvAHQAaAAgAGkA
bgB0AGUAZwBlAHIAcwABAQCAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4A
bgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABh
ACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQA
LgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBmAGEAYgBhAGIAYQBlADQAOABlAGYAOQA0ADEAYQAz
AGEAOQBlAGIAYgAyAGIANAA1ADkAYwA1ADUAZABiAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAAlZVYgIlwoEuB1gmvSzC+ggAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERXQQHAggIBAABCAkDIAAOCSADARJFHQgSSQMGEkUDBh0IBCABDggFIAIBCBwEIAECCAQg
AQkIAyAAAgYgAgIOEX0FIAEdCAgIAAESgIERgIUFIAASgIkHIAIBDhKAiQi3elxWGTTgiQiJhF3N
gIDMkQIGAgMGEhQDBhIYAwYSTQMGElUDBhJZAwYSIAUgAQESDAQgAQECAyAACQQgAQEJCSAEAQgO
EkUSSQUgAQESTQQAABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAAOAygAAgMoAAkECAASVQQIABJZ
BAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NDX2ZhYmFiYWU0OGVmOTQxYTNhOWViYjJiNDU5YzU1ZGJiAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALg3AAAAAAAAAAAA
ANI3AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADENwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZgBhAGIAYQBiAGEAZQA0ADgAZQBmADkANAAxAGEAMwBhADkAZQBiAGIAMgBiADQANQA5
AGMANQA1AGQAYgBiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGEAYgBhAGIAYQBl
ADQAOABlAGYAOQA0ADEAYQAzAGEAOQBlAGIAYgAyAGIANAA1ADkAYwA1ADUAZABiAGIALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYAYQBi
AGEAYgBhAGUANAA4AGUAZgA5ADQAMQBhADMAYQA5AGUAYgBiADIAYgA0ADUAOQBjADUANQBkAGIA
YgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmAGEAYgBh
AGIAYQBlADQAOABlAGYAOQA0ADEAYQAzAGEAOQBlAGIAYgAyAGIANAA1ADkAYwA1ADUAZABiAGIA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOQ3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_fababae48ef941a3a9ebb2b459c55dbb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">77</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import dodgy data\Validate Data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Validate Data.Inputs[Input 0].Columns[ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ContestantName"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Import dodgy data\Validate Data.Inputs[Input 0].Columns[SeriesNumber]"
                      cachedDataType="ui4"
                      cachedName="SeriesNumber"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[SeriesNumber]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Validate Data.Inputs[Input 0].Columns[Position]"
                      cachedDataType="ui4"
                      cachedName="Position"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[Position]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Validate Data.Inputs[Input 0].Columns[MentorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MentorName"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Validate Data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Import dodgy data\Validate Data.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[IfGood]"
                      dataType="bool"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[IfGood]"
                      name="IfGood" />
                    <outputColumn
                      refId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[Problem]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[Problem]"
                      name="Problem" />
                    <outputColumn
                      refId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intPosition]"
                      dataType="ui4"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intPosition]"
                      name="intPosition" />
                    <outputColumn
                      refId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intSeries]"
                      dataType="ui4"
                      lineageId="Package\Import dodgy data\Validate Data.Outputs[Output 0].Columns[intSeries]"
                      name="intSeries" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import dodgy data.Paths[Bad Data]"
              endId="Package\Import dodgy data\Bad data Table.Inputs[OLE DB Destination Input]"
              name="Bad Data"
              startId="Package\Import dodgy data\Conditional Split.Outputs[Bad Data]" />
            <path
              refId="Package\Import dodgy data.Paths[Data Conversion Output]"
              endId="Package\Import dodgy data\Validate Data.Inputs[Input 0]"
              name="Data Conversion Output"
              startId="Package\Import dodgy data\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import dodgy data.Paths[Flat File Source Output]"
              endId="Package\Import dodgy data\Data Conversion.Inputs[Data Conversion Input]"
              name="Flat File Source Output"
              startId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Import dodgy data.Paths[Good data]"
              endId="Package\Import dodgy data\Good data Table.Inputs[OLE DB Destination Input]"
              name="Good data"
              startId="Package\Import dodgy data\Conditional Split.Outputs[Good data]" />
            <path
              refId="Package\Import dodgy data.Paths[Output 0]"
              endId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Import dodgy data\Validate Data.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{37AC20E5-56B1-46AD-99F6-FA7B792120FF}"
      DTS:From="Package\Delete Old Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import dodgy data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="154,42"
          Id="Package\Delete Old Data"
          TopLeft="128,133" />
        <NodeLayout
          Size="167,42"
          Id="Package\Import dodgy data"
          TopLeft="155,243" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="205,175">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.5,68"
              Start="0,0"
              End="33.5,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30"
                    Point2="0,34"
                    Point3="4,34" />
                  <mssgle:LineSegment
                    End="29.5,34" />
                  <mssgle:CubicBezierSegment
                    Point1="29.5,34"
                    Point2="33.5,34"
                    Point3="33.5,38" />
                  <mssgle:LineSegment
                    End="33.5,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import dodgy data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\Import dodgy data\Data Conversion"
          TopLeft="193,125" />
        <NodeLayout
          Size="142,42"
          Id="Package\Import dodgy data\Validate Data"
          TopLeft="155,227" />
        <NodeLayout
          Size="155,42"
          Id="Package\Import dodgy data\Conditional Split"
          TopLeft="138,383" />
        <NodeLayout
          Size="157,42"
          Id="Package\Import dodgy data\Good data Table"
          TopLeft="43,574" />
        <NodeLayout
          Size="167,42"
          Id="Package\Import dodgy data\Dodgy data import"
          TopLeft="172,22" />
        <NodeLayout
          Size="150,42"
          Id="Package\Import dodgy data\Bad data Table"
          TopLeft="294,583" />
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Output 0]"
          TopLeft="226,269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.5,114"
              Start="0,0"
              End="-10.5,106.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53"
                    Point2="0,57"
                    Point3="-4,57" />
                  <mssgle:LineSegment
                    End="-6.5,57" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.5,57"
                    Point2="-10.5,57"
                    Point3="-10.5,61" />
                  <mssgle:LineSegment
                    End="-10.5,106.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Good data]"
          TopLeft="215.5,425">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-94,149"
              Start="0,0"
              End="-94,141.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,70.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,70.5"
                    Point2="0,74.5"
                    Point3="-4,74.5" />
                  <mssgle:LineSegment
                    End="-90,74.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-90,74.5"
                    Point2="-94,74.5"
                    Point3="-94,78.5" />
                  <mssgle:LineSegment
                    End="-94,141.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-70.30587890625,79.5,46.6117578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Flat File Source Output]"
          TopLeft="255.5,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.5,61"
              Start="0,0"
              End="15.5,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5"
                    Point2="0,30.5"
                    Point3="4,30.5" />
                  <mssgle:LineSegment
                    End="11.5,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="11.5,30.5"
                    Point2="15.5,30.5"
                    Point3="15.5,34.5" />
                  <mssgle:LineSegment
                    End="15.5,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Data Conversion Output]"
          TopLeft="271,167">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45,60"
              Start="0,0"
              End="-45,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-41,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-41,30"
                    Point2="-45,30"
                    Point3="-45,34" />
                  <mssgle:LineSegment
                    End="-45,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Bad Data]"
          TopLeft="240,425">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="129,158"
              Start="0,0"
              End="129,150.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.1685823754789" />
                  <mssgle:CubicBezierSegment
                    Point1="0,60.1685823754789"
                    Point2="0,64.1685823754789"
                    Point3="4,64.1685823754789" />
                  <mssgle:LineSegment
                    End="125,64.1685823754789" />
                  <mssgle:CubicBezierSegment
                    Point1="125,64.1685823754789"
                    Point2="129,64.1685823754789"
                    Point3="129,68.1685823754789" />
                  <mssgle:LineSegment
                    End="129,150.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="43.971640625,69.1685823754789,41.05671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import dodgy data\Good data Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import dodgy data\Bad data Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>