<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/28/2022 5:26:47 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LUCAS"
  DTS:CreatorName="Lucas\Lukasz"
  DTS:DTSID="{86C5380B-FFE3-401F-87BA-84EF570A7843}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="2057"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="11"
  DTS:VersionGUID="{CDF7FC0A-7BB1-4E40-A692-E7E4DE08ADEC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{0F350FC5-6865-4F53-A0D2-BD08AFE061D0}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=D:\IT programming tutorials\SSIS\WiseOwlTutorial\X Factor contestants.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1A7994C8-5B0B-4D73-A8A7-5B319C9A4C4E}"
      DTS:ObjectName="Lucas\SQLEXPRESS.SSISTraining">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=Lucas\SQLEXPRESS;Initial Catalog=SSISTraining;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{450CA36F-2D99-4388-819D-A2FA2302CFA7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberContestants">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5095A4F6-0ACC-4BC1-9EE3-ECBA25983701}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberMentors">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DB735531-0A8F-4F65-98B2-71142F35BC71}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberSeries">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{98DBDE11-9D7B-4EBD-905A-C3A3400CB18A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; Â© 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1A7994C8-5B0B-4D73-A8A7-5B319C9A4C4E}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[tblMentor]&#xA;TRUNCATE TABLE [dbo].[tblFinalist]&#xA;TRUNCATE TABLE [dbo].[Series]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import and count  series"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{377f6307-c84b-4347-8c1c-cae2742fbdde}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import and count  series"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import and count  series\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Series$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count  series\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Series]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Series]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Series]"
                      name="Series"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Winner]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      length="255"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Winner]"
                      name="Winner"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Start date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start date]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Start date]"
                      name="Start date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Finish date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Finish date]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Finish date]"
                      name="Finish date"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Series]"
                      dataType="r8"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      dataType="wstr"
                      length="255"
                      name="Winner" />
                    <externalMetadataColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start date]"
                      dataType="date"
                      name="Start date" />
                    <externalMetadataColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].ExternalColumns[Finish date]"
                      dataType="date"
                      name="Finish date" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Series]"
                      dataType="r8"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Winner]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Winner]"
                      name="Winner" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Start date]"
                      dataType="date"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Start date]"
                      name="Start date" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Finish date]"
                      dataType="date"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[Finish date]"
                      name="Finish date" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count  series\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Series]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count  series\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
                  connectionManagerRefId="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Series]"
                      cachedDataType="r8"
                      cachedName="Series"
                      externalMetadataColumnId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Series]" />
                    <inputColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Winner]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Winner"
                      externalMetadataColumnId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Winner]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Winner]" />
                    <inputColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start date]"
                      cachedDataType="date"
                      cachedName="Start date"
                      externalMetadataColumnId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Start date]" />
                    <inputColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Finish date]"
                      cachedDataType="date"
                      cachedName="Finish date"
                      externalMetadataColumnId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FinishDate]"
                      lineageId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output].Columns[Finish date]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      dataType="nText"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Winner]"
                      dataType="nText"
                      name="Winner" />
                    <externalMetadataColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      dataType="nText"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FinishDate]"
                      dataType="nText"
                      name="FinishDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count  series\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count  series\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count  series\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count  series\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count  series\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count  series\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberSeries</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import and count  series\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count  series\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Import and count  series\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import and count  series.Paths[Excel Source Output]"
              endId="Package\Import and count  series\Row Count.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\Import and count  series\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import and count  series.Paths[Row Count Output 1]"
              endId="Package\Import and count  series\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\Import and count  series\Row Count.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import and count contestants"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C45CD4B5-7728-4717-BF26-97B441553B8C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import and count contestants"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import and count contestants\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Finalists$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count contestants\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Id]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Id]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Id]"
                      name="Id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Name]"
                      length="255"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Series]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Series]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Series]"
                      name="Series"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Category]"
                      length="255"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Category]"
                      name="Category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Mentor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Mentor]"
                      length="255"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Mentor]"
                      name="Mentor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Finished]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Finished]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Finished]"
                      name="Finished"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Id]"
                      dataType="r8"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Name]"
                      dataType="wstr"
                      length="255"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Series]"
                      dataType="r8"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Category]"
                      dataType="wstr"
                      length="255"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Mentor]"
                      dataType="wstr"
                      length="255"
                      name="Mentor" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].ExternalColumns[Finished]"
                      dataType="r8"
                      name="Finished" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Id]"
                      dataType="r8"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Id]"
                      name="Id" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Name]"
                      name="Name" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Series]"
                      dataType="r8"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Category]"
                      name="Category" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Mentor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Mentor]"
                      name="Mentor" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Finished]"
                      dataType="r8"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[Finished]"
                      name="Finished" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count contestants\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tblFinalist]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count contestants\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
                  connectionManagerRefId="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Series]"
                      cachedDataType="r8"
                      cachedName="Series"
                      externalMetadataColumnId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Series]" />
                    <inputColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Mentor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Mentor"
                      externalMetadataColumnId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MentorName]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Mentor]" />
                    <inputColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Name"
                      externalMetadataColumnId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FinalistName]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Name]" />
                    <inputColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Finished]"
                      cachedDataType="r8"
                      cachedName="Finished"
                      externalMetadataColumnId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      lineageId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output].Columns[Finished]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FinalistID]"
                      dataType="i4"
                      name="FinalistID" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MentorName]"
                      dataType="wstr"
                      length="255"
                      name="MentorName" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FinalistName]"
                      dataType="wstr"
                      length="255"
                      name="FinalistName" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      dataType="i4"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      dataType="i4"
                      name="Position" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count contestants\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count contestants\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count contestants\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count contestants\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count contestants\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberContestants</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import and count contestants\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count contestants\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Import and count contestants\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import and count contestants.Paths[Excel Source Output]"
              endId="Package\Import and count contestants\Row Count.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\Import and count contestants\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import and count contestants.Paths[Row Count Output 1]"
              endId="Package\Import and count contestants\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\Import and count contestants\Row Count.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import and count mentors"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{d5bf7522-80c6-432a-9f24-070373950173}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import and count mentors"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import and count mentors\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Mentors$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count mentors\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].Columns[MentorId]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].ExternalColumns[MentorId]"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].Columns[MentorId]"
                      name="MentorId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].Columns[MentorName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].ExternalColumns[MentorName]"
                      length="255"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].Columns[MentorName]"
                      name="MentorName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].ExternalColumns[MentorId]"
                      dataType="r8"
                      name="MentorId" />
                    <externalMetadataColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].ExternalColumns[MentorName]"
                      dataType="wstr"
                      length="255"
                      name="MentorName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[MentorId]"
                      dataType="r8"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[MentorId]"
                      name="MentorId" />
                    <outputColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[MentorName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[MentorName]"
                      name="MentorName" />
                    <outputColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count mentors\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[tblMentor]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count mentors\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
                  connectionManagerRefId="Package.ConnectionManagers[Lucas\SQLEXPRESS.SSISTraining]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MentorName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MentorName"
                      externalMetadataColumnId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MentorName]"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].Columns[MentorName]" />
                    <inputColumn
                      refId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MentorId]"
                      cachedDataType="r8"
                      cachedName="MentorId"
                      externalMetadataColumnId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MentorId]"
                      lineageId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output].Columns[MentorId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MentorName]"
                      dataType="nText"
                      name="MentorName" />
                    <externalMetadataColumn
                      refId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MentorId]"
                      dataType="nText"
                      name="MentorId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count mentors\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count mentors\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count mentors\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count mentors\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count mentors\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count mentors\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberMentors</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import and count mentors\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count mentors\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Import and count mentors\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import and count mentors.Paths[Excel Source Output]"
              endId="Package\Import and count mentors\Row Count.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\Import and count mentors\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import and count mentors.Paths[Row Count Output 1]"
              endId="Package\Import and count mentors\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\Import and count mentors\Row Count.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Show results"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{ED9C2709-D74D-4EF9-AF94-D0BCCEC3A107}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Show results"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_dd818397fd1e411cb069205c02442655"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="User::NumberContestants,User::NumberMentors,User::NumberSeries">
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()

        Dim NumberContestants As Integer = Convert.ToInt32(Dts.Variables("NumberContestants").Value)
        Dim NumberMentors As Integer = Convert.ToInt32(Dts.Variables("NumberMentors").Value)
        Dim NumberSeries As Integer = Convert.ToInt32(Dts.Variables("NumberSeries").Value)
        MessageBox.Show("Contestant" & NumberContestants.ToString & " rows" & "Mentors" & NumberMentors.ToString & " rows" & "Series" & NumberSeries.ToString & " rows")
        Dts.TaskResult = ScriptResults.Success



    End Sub
#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="ST_dd818397fd1e411cb069205c02442655.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e0db8ecf-18ec-470a-8593-cddab75145da}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_dd818397fd1e411cb069205c02442655</RootNamespace>
    <AssemblyName>ST_dd818397fd1e411cb069205c02442655</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_dd818397fd1e411cb069205c02442655")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_dd818397fd1e411cb069205c02442655")> 
<Assembly: AssemblyCopyright("Copyright @  2022")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("37326684-ed63-4eb3-8ab5-bf31f294be85")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_dd818397fd1e411cb069205c02442655</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_dd818397fd1e411cb069205c02442655</msb:DisplayName>
    <msb:ProjectId>{422DF41E-D432-4F5C-889A-0510ADB5286E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_dd818397fd1e411cb069205c02442655.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_dd818397fd1e411cb069205c02442655.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKuCpGIAAAAAAAAAAOAAIiALAVAAABoAAAAIAAAAAAAA9jkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKQ5AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA/BkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADY
OQAAAAAAAEgAAAACAAUA9CIAAPgVAAABAAAAAAAAAOw4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhMwBADLAAAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKCYAAAooLwAACgoCKCsAAApvLAAACnJXAABwby0AAApvLgAACigm
AAAKKC8AAAoLAigrAAAKbywAAApycwAAcG8tAAAKby4AAAooJgAACigvAAAKDB2NLgAAASUWco0A
AHCiJRcSACgwAAAKoiUYcqMAAHCiJRkSASgwAAAKoiUacr0AAHCiJRsSAigwAAAKoiUcctUAAHCi
KDEAAAooMgAACiYCKCsAAAoWbzMAAAoqNgIDKCYAAAooNAAACioeAig1AAAKKi7QCAAAAigjAAAK
Kh4CKDYAAAoqAAAAEzABABQAAAACAAARAowFAAAbLQgoAQAAKworAgIKBioiA/4VBQAAGyoAAAAT
MAIAKAAAAAMAABECezgAAApvOQAACgoGjAgAABstEigCAAArCgJ7OAAACgZvOgAACgYqSgIoIgAA
CgJzOwAACn04AAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0BwAAI34A
AGAIAAAwCQAAI1N0cmluZ3MAAAAAkBEAAOQAAAAjVVMAdBIAABAAAAAjR1VJRAAAAIQSAAB0AwAA
I0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPoBMwAWAAABAAAAMgAAAAoAAAAMAAAAGQAAAAQAAAA7
AAAAAgAAADcAAAADAAAABAAAAAgAAAAJAAAACAAAAAEAAAAGAAAAAQAAAAMAAAADAAAAAgAAAAAA
HgUBAAAAAAAGAF0DggcGAAIEggcGADQCwwYPACgIAAAGAHUCywUGAEADywUGAOkDywUGAH0DywUG
AJYDywUGALwCywUGALEDTwUGAGECPAcGAN0BPAcGAAgDywUGANcCXAQKAAACXQYKAMgBCAUKAEgC
CAUOAKABEgcOAJMG1gYGAPACwwYOAIwCWwcOAKQCuQAGAKYITwUOAHkGEgcOACUDuQAGAFMBTwUO
AAEAzAQKAOsBWwUGAE0GogcGAN0FtgUKALABoQUGABcCwwYSAMcDowQSAIQBowQGAH8ETwUGAFYF
TwUGAAwBTwUGACUJywUGAGwIggcGALsGSwQSAPYEowQWADsIMAEWAAMBMAEGANgITwUGAHgETwUG
AC0ATwUaAO8IVwgaALwIVwgGAKQGTwUAAAAAVwAAAAAAAQABAAAAAACTBfoITQABAAEAAAAAAJEG
+ghRAAEAAgAAARAArQj6CGEAAQADAAAAAADkB7MHYQAFAAgAAAEQAEUIMwCBAAcADAABAAAAeAUz
AI0ACQAPAAUBAAAEBwAAYQAJABEABQEAABAAAABhAAkAGAACAQAAiwgAAJUACgAaADEAEgYMATEA
6QUUATEA/QUcATEAKwYkAREAnAYsAREAeAEwAREAIAQ0AREAoAg4ASEA4AjKAAYGqAA7AVaAewg+
AVaAWAE+AVAgAAAAAAYYrgYGAAEAWCAAAAAABhiuBgYAAQBgIAAAAAARGLQGQgEBAIogAAAAABMI
hAZGAQEAliAAAAAAEwiDBUsBAQCiIAAAAAATCHUGUAEBAK4gAAAAABMI9AZVAQEAuiAAAAAAAxiu
BgYAAQDCIAAAAAAWCEkGWgEBAO4gAAAAABYIYAFfAQEA9SAAAAAAFghsAWQBAQD9IAAAAAARGLQG
QgECAA4hAAAAAAYYrgYGAAIAGCEAAAAAFggoBGoBAgB0IQAAAAAGGK4GBgACAHwhAAAAAAYAfgUG
AAIAUyIAAAAAxgJQCKIAAgBhIgAAAADGAvcApwADAGkiAAAAAIMAUAFvAQMAdSIAAAAAxgJ2BJEA
AwCAIgAAAAARAJUAdAEDAKAiAAAAAAEAgQB8AQQAuiAAAAAABhiuBgYABQCsIgAAAAADCN4ASgAF
AOAiAAAAAAYYrgYGAAUAAAABAEUEAAABAOcFAAABAO4AAAABAO4ACQCuBgEAEQCuBgYAGQCuBgoA
KQCuBhAAMQCuBhAAOQCuBhAAQQCuBhAASQCuBhAAUQCuBhAAWQCuBhUAYQCuBhUAaQCuBhAAcQCu
BhAAeQCuBhAAgQCuBhoAkQCuBiAAqQCuBgYAsQCuBgYAuQCuBgYA0QCuBiYA6QCuBhAACQGuBgYA
EQGuBgYAmQCuBgYAoQCuBgYADACuBgYAFACuBgYAHACuBgYAJACuBgYADADeAEoAFADeAEoAHADe
AEoAJADeAEoAwQCuBgYA2QAeAU8A2QAhCVcA8QCuBl0AQQE8BGUAAQGuBgYASQF+BmoASQG3CGoA
GQGuBgYAGQGDCHUAUQE3CHsAWQFGBYEAYQEoBIgAaQErAIwAeQF2BJEAcQGZCJUAgQHqCJsAUQHJ
CAEAwQBQCKIAwQD3AKcAwQB2BJEAkQHPALMANADgCMoAPAAoBEoAPAAyBOEAPACuBgYACAAsAAIB
CAAwAAcBKQCrAC4DLgALAKwBLgATALUBLgAbANQBLgAjAN0BLgArAAYCLgAzAAYCLgA7AN0BLgBD
AAwCLgBLAAYCLgBTACMCLgBbAAYCLgBjACkCLgBrAFMCLgBzAGACQACLAAcBQACDAKoCQwB7ALMC
QwCDAKoCSQCrAD8DYwB7ALMCYwCDAKoCaQCrAFMDgACLAAcBgwCTAAcBgwCbAAcBgwB7ALMCiQCr
AGADoACLAAcBqQCDANQBwACLAAcByQCDANQB4ACLAAcB4wC7AAcB4wBTAAYC6QCzAAcBAwGDAKoC
AwGjAMwCIwGDAKoCIwFbAAYCIAKDAKoCIAKLAAcBQAKDAKoCQAKLAAcBYAKDAKoCYAKLAAcBgAKD
AKoCgAKLAAcBoAKLAAcBwAKLAAcB4AKLAAcB4AKDAKoCAAOLAAcBIAOLAAcBIAODAKoCbwCrAL4A
BAABAAUABQAGAAcACQAIAAAAkwaEAQAAlQWJAQAAeQaOAQAABgeTAQAATQaYAQAAfAGdAQAARQSi
AQAA4gCnAQIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIA
GAARAC4ANQA8AEMAsADDANIA2QAEgAAAAQAAAAAAAAAAAAAAAAAzAAAABAAAAAAAAAAAAAAA5wCw
AAAAAAAEAAAAAAAAAAAAAADnAE8FAAAAAAoAAAAAAAAAAAAAAPAAuQAAAAAADgAAAAAAAAAAAAAA
+QCEBAAAAAAOAAAAAAAAAAAAAAD5AGAAAAAAAAQAAAAAAAAAAAAAAOcAVwgAAAAAAAAAAAEAAADw
BwAACAAEAAkABAAKAAcAAAAQABIAfwAAABAAKwB/AAAAAAAtAH8AbwC5AG8A3AAAAABDb250ZXh0
VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBUb0ludDMyAFNUX2RkODE4Mzk3ZmQx
ZTQxMWNiMDY5MjA1YzAyNDQyNjU1ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBUAERpc3Bvc2VfX0luc3RhbmNlX18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AbXNj
b3JsaWIATWljcm9zb2Z0LlZpc3VhbEJhc2ljAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5j
ZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVk
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBN
eUdyb3VwQ29sbGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmpl
Y3RWYWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJp
bmcATWF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5J
bnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZGQ4MTgz
OTdmZDFlNDExY2IwNjkyMDVjMDI0NDI2NTUuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAFN5c3Rl
bS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBs
aWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBtX0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFBy
b3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92
aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAGdldF9Vc2Vy
AEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IAQWN0aXZhdG9yAC5jdG9yAC5j
Y3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2
aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
QXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9z
b2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2RkODE4Mzk3ZmQxZTQxMWNiMDY5MjA1YzAyNDQy
NjU1Lk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF9kZDgxODM5N2ZkMWU0MTFjYjA2OTIwNWMw
MjQ0MjY1NS5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMA
TXlTZXR0aW5ncwBFcXVhbHMAU3lzdGVtLldpbmRvd3MuRm9ybXMAUnVudGltZUhlbHBlcnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AG1fU3luY09iamVjdABNeVByb2plY3QA
RXhpdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAQ29udmVydABtX0NvbnRleHQAU2hvdwBN
ZXNzYWdlQm94AFNUX2RkODE4Mzk3ZmQxZTQxMWNiMDY5MjA1YzAyNDQyNjU1Lk15AGdldF9Bc3Nl
bWJseQAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMA
ACNOAHUAbQBiAGUAcgBDAG8AbgB0AGUAcwB0AGEAbgB0AHMAABtOAHUAbQBiAGUAcgBNAGUAbgB0
AG8AcgBzAAAZTgB1AG0AYgBlAHIAUwBlAHIAaQBlAHMAABVDAG8AbgB0AGUAcwB0AGEAbgB0AAAZ
IAByAG8AdwBzAE0AZQBuAHQAbwByAHMAABcgAHIAbwB3AHMAUwBlAHIAaQBlAHMAAAsgAHIAbwB3
AHMAAAAAAKl4mg7vvrRMkP3nVkZFKFYABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUg
AQERRQcgBAEODg4OBhUSJAESDAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgJkFIAAS
gJ0HIAIBDhKAnQQAARwcBAABARwFBwMICAgFIAASgKkFIAASgK0GIAESgLEcAyAAHAQAAQgcAyAA
DgUAAQ4dDgYAARGAxQ4EIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMABwYV
EnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEEAAAA
AAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwCBggD
BhEoAwAAAQQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAAEm0HEAEB
HgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZGQ4MTgz
OTdmZDFlNDExY2IwNjkyMDVjMDI0NDI2NTUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAA
BQEAAQAAKQEAJDM3MzI2Njg0LWVkNjMtNGViMy04YWI1LWJmMzFmMjk0YmU4NQAADAEABzEuMC4w
LjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAAAGEB
ADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNy
ZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVyAAAT
AQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAADMOQAAAAAAAAAAAADmOQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2DkAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBkAGQAOAAxADgAMwA5ADcAZgBkADEAZQA0ADEAMQBjAGIAMAA2ADkAMgAwADUAYwAwADIA
NAA0ADIANgA1ADUAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGQAZAA4ADEAOAAzADkA
NwBmAGQAMQBlADQAMQAxAGMAYgAwADYAOQAyADAANQBjADAAMgA0ADQAMgA2ADUANQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZABkADgA
MQA4ADMAOQA3AGYAZAAxAGUANAAxADEAYwBiADAANgA5ADIAMAA1AGMAMAAyADQANAAyADYANQA1
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGQAZAA4ADEA
OAAzADkANwBmAGQAMQBlADQAMQAxAGMAYgAwADYAOQAyADAANQBjADAAMgA0ADQAMgA2ADUANQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA+DkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{DF51D2A1-6293-4D7B-986D-7579FC213773}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import and count contestants" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{081BE8C4-49C0-433B-A571-CCE0002B0433}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Import and count mentors" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{87DAB64B-15D5-4E47-9B91-BFF7ADE26EA9}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Import and count  series" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{81C32952-5A44-4B97-A260-05D98364E8E0}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::NumberContestants] &gt;= 100"
      DTS:From="Package\Import and count contestants"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Show results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{FA096BB5-7A69-48D4-9278-B857AA9C9A66}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::NumberMentors]&gt;= 10"
      DTS:From="Package\Import and count mentors"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Show results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{623A10DD-39F8-4984-96E9-4FF1F66BFADC}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::NumberSeries]&gt;= 10"
      DTS:From="Package\Import and count  series"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Show results" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Execute SQL Task"
          TopLeft="221,79" />
        <NodeLayout
          Size="219,42"
          Id="Package\Import and count contestants"
          TopLeft="12,209" />
        <NodeLayout
          Size="203,42"
          Id="Package\Import and count mentors"
          TopLeft="257,196" />
        <NodeLayout
          Size="195,42"
          Id="Package\Import and count  series"
          TopLeft="463,185" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="302.5,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-181,88"
              Start="0,0"
              End="-181,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40"
                    Point2="0,44"
                    Point3="-4,44" />
                  <mssgle:LineSegment
                    End="-177,44" />
                  <mssgle:CubicBezierSegment
                    Point1="-177,44"
                    Point2="-181,44"
                    Point3="-181,48" />
                  <mssgle:LineSegment
                    End="-181,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="302.5,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56,75"
              Start="0,0"
              End="56,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.5"
                    Point2="0,37.5"
                    Point3="4,37.5" />
                  <mssgle:LineSegment
                    End="52,37.5" />
                  <mssgle:CubicBezierSegment
                    Point1="52,37.5"
                    Point2="56,37.5"
                    Point3="56,41.5" />
                  <mssgle:LineSegment
                    End="56,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="341.25,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="219.25,64"
              Start="0,0"
              End="219.25,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.0201207243461" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.0201207243461"
                    Point2="0,22.0201207243461"
                    Point3="4,22.0201207243461" />
                  <mssgle:LineSegment
                    End="215.25,22.0201207243461" />
                  <mssgle:CubicBezierSegment
                    Point1="215.25,22.0201207243461"
                    Point2="219.25,22.0201207243461"
                    Point3="219.25,26.0201207243461" />
                  <mssgle:LineSegment
                    End="219.25,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="139,42"
          Id="Package\Show results"
          TopLeft="283.333333333333,381.111111111111" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="121.5,251">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="198.583333333333,130.111111111111"
              Start="0,0"
              End="198.583333333333,122.611111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.1079738562092" />
                  <mssgle:CubicBezierSegment
                    Point1="0,81.1079738562092"
                    Point2="0,85.1079738562092"
                    Point3="4,85.1079738562092" />
                  <mssgle:LineSegment
                    End="194.583333333333,85.1079738562092" />
                  <mssgle:CubicBezierSegment
                    Point1="194.583333333333,85.1079738562092"
                    Point2="198.583333333333,85.1079738562092"
                    Point3="198.583333333333,89.1079738562092" />
                  <mssgle:LineSegment
                    End="198.583333333333,122.611111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.2916666666667,90.1079738562092,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="355.666666666667,238">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,143.111111111111"
              Start="0,0"
              End="0,135.611111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,135.611111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,59.8055555555556,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="560.5,227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-174.916666666667,154.111111111111"
              Start="0,0"
              End="-174.916666666667,146.611111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,96.8067973856209" />
                  <mssgle:CubicBezierSegment
                    Point1="0,96.8067973856209"
                    Point2="0,100.806797385621"
                    Point3="-4,100.806797385621" />
                  <mssgle:LineSegment
                    End="-170.916666666667,100.806797385621" />
                  <mssgle:CubicBezierSegment
                    Point1="-170.916666666667,100.806797385621"
                    Point2="-174.916666666667,100.806797385621"
                    Point3="-174.916666666667,104.806797385621" />
                  <mssgle:LineSegment
                    End="-174.916666666667,146.611111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-95.4583333333333,105.806797385621,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import and count contestants">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139,42"
          Id="Package\Import and count contestants\Excel Source"
          TopLeft="188,99" />
        <NodeLayout
          Size="130,42"
          Id="Package\Import and count contestants\Row Count"
          TopLeft="172,239" />
        <EdgeLayout
          Id="Package\Import and count contestants.Paths[Excel Source Output]"
          TopLeft="257.5,141">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.5,98"
              Start="0,0"
              End="-20.5,90.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45"
                    Point2="0,49"
                    Point3="-4,49" />
                  <mssgle:LineSegment
                    End="-16.5,49" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.5,49"
                    Point2="-20.5,49"
                    Point3="-20.5,53" />
                  <mssgle:LineSegment
                    End="-20.5,90.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171,42"
          Id="Package\Import and count contestants\OLE DB Destination"
          TopLeft="176,315" />
        <EdgeLayout
          Id="Package\Import and count contestants.Paths[Row Count Output 1]"
          TopLeft="237,281">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.5,34"
              Start="0,0"
              End="24.5,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="4,17" />
                  <mssgle:LineSegment
                    End="20.5,17" />
                  <mssgle:CubicBezierSegment
                    Point1="20.5,17"
                    Point2="24.5,17"
                    Point3="24.5,21" />
                  <mssgle:LineSegment
                    End="24.5,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Import and count mentors">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139,42"
          Id="Package\Import and count mentors\Excel Source"
          TopLeft="76,60" />
        <NodeLayout
          Size="130,42"
          Id="Package\Import and count mentors\Row Count"
          TopLeft="60,200" />
        <NodeLayout
          Size="171,42"
          Id="Package\Import and count mentors\OLE DB Destination"
          TopLeft="59,362" />
        <EdgeLayout
          Id="Package\Import and count mentors.Paths[Excel Source Output]"
          TopLeft="145.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.5,98"
              Start="0,0"
              End="-20.5,90.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45"
                    Point2="0,49"
                    Point3="-4,49" />
                  <mssgle:LineSegment
                    End="-16.5,49" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.5,49"
                    Point2="-20.5,49"
                    Point3="-20.5,53" />
                  <mssgle:LineSegment
                    End="-20.5,90.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import and count mentors.Paths[Row Count Output 1]"
          TopLeft="125,242">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.5,120"
              Start="0,0"
              End="19.5,112.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56"
                    Point2="0,60"
                    Point3="4,60" />
                  <mssgle:LineSegment
                    End="15.5,60" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,60"
                    Point2="19.5,60"
                    Point3="19.5,64" />
                  <mssgle:LineSegment
                    End="19.5,112.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Import and count  series">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139,42"
          Id="Package\Import and count  series\Excel Source"
          TopLeft="76,60" />
        <NodeLayout
          Size="130,42"
          Id="Package\Import and count  series\Row Count"
          TopLeft="60,200" />
        <NodeLayout
          Size="171,42"
          Id="Package\Import and count  series\OLE DB Destination"
          TopLeft="64,276" />
        <EdgeLayout
          Id="Package\Import and count  series.Paths[Excel Source Output]"
          TopLeft="145.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.5,98"
              Start="0,0"
              End="-20.5,90.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45"
                    Point2="0,49"
                    Point3="-4,49" />
                  <mssgle:LineSegment
                    End="-16.5,49" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.5,49"
                    Point2="-20.5,49"
                    Point3="-20.5,53" />
                  <mssgle:LineSegment
                    End="-20.5,90.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import and count  series.Paths[Row Count Output 1]"
          TopLeft="125,242">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.5,34"
              Start="0,0"
              End="24.5,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="4,17" />
                  <mssgle:LineSegment
                    End="20.5,17" />
                  <mssgle:CubicBezierSegment
                    Point1="20.5,17"
                    Point2="24.5,17"
                    Point3="24.5,21" />
                  <mssgle:LineSegment
                    End="24.5,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count contestants\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count contestants\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count mentors\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count mentors\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count  series\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count  series\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>